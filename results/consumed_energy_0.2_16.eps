%!PS-Adobe-2.0 EPSF-2.0
%%Title: consumed_energy_0.2_16.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Thu Feb  7 14:39:48 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (consumed_energy_0.2_16.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (summer)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Feb  7 14:39:48 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1.000 UL
LTa
770 448 M
5533 0 V
stroke
LTb
770 448 M
63 0 V
5470 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2400)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
770 969 M
5533 0 V
stroke
LTb
770 969 M
63 0 V
5470 0 R
-63 0 V
stroke
686 969 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2600)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
770 1491 M
5533 0 V
stroke
LTb
770 1491 M
63 0 V
5470 0 R
-63 0 V
stroke
686 1491 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2800)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
770 2012 M
5533 0 V
stroke
LTb
770 2012 M
63 0 V
5470 0 R
-63 0 V
stroke
686 2012 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
770 2534 M
5533 0 V
stroke
LTb
770 2534 M
63 0 V
5470 0 R
-63 0 V
stroke
686 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3200)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
770 3055 M
5533 0 V
stroke
LTb
770 3055 M
63 0 V
5470 0 R
-63 0 V
stroke
686 3055 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3400)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
770 3576 M
5533 0 V
stroke
LTb
770 3576 M
63 0 V
5470 0 R
-63 0 V
stroke
686 3576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3600)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
770 4098 M
5533 0 V
stroke
LTb
770 4098 M
63 0 V
5470 0 R
-63 0 V
stroke
686 4098 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3800)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
770 4619 M
5533 0 V
stroke
LTb
770 4619 M
63 0 V
5470 0 R
-63 0 V
stroke
686 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
770 448 M
0 4171 V
stroke
LTb
770 448 M
0 63 V
0 4108 R
0 -63 V
stroke
770 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1877 448 M
0 4171 V
stroke
LTb
1877 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1877 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2983 448 M
0 4171 V
stroke
LTb
2983 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2983 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4090 448 M
0 3828 V
0 280 R
0 63 V
stroke
LTb
4090 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4090 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5196 448 M
0 3828 V
0 280 R
0 63 V
stroke
LTb
5196 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5196 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6303 448 M
0 4171 V
stroke
LTb
6303 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6303 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
6303 448 M
-63 0 V
stroke
6387 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 190)]
] -46.7 MLshow
1.000 UL
LTb
6303 865 M
-63 0 V
stroke
6387 865 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MLshow
1.000 UL
LTb
6303 1282 M
-63 0 V
stroke
6387 1282 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 210)]
] -46.7 MLshow
1.000 UL
LTb
6303 1699 M
-63 0 V
stroke
6387 1699 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 220)]
] -46.7 MLshow
1.000 UL
LTb
6303 2116 M
-63 0 V
stroke
6387 2116 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 230)]
] -46.7 MLshow
1.000 UL
LTb
6303 2534 M
-63 0 V
stroke
6387 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 240)]
] -46.7 MLshow
1.000 UL
LTb
6303 2951 M
-63 0 V
stroke
6387 2951 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MLshow
1.000 UL
LTb
6303 3368 M
-63 0 V
stroke
6387 3368 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 260)]
] -46.7 MLshow
1.000 UL
LTb
6303 3785 M
-63 0 V
stroke
6387 3785 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 270)]
] -46.7 MLshow
1.000 UL
LTb
6303 4202 M
-63 0 V
stroke
6387 4202 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 280)]
] -46.7 MLshow
1.000 UL
LTb
6303 4619 M
-63 0 V
stroke
6387 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 290)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
770 4619 N
770 448 L
5533 0 V
0 4171 V
-5533 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Sum Consumed Energy)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
6876 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Max Consumed Energy)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3536 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Damping coefficient)]
] -46.7 MCshow
LTb
3536 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Simulation \(Robots : 16\))]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
5652 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (Sum consumed energy)]
] -46.7 MRshow
LT0
5736 4486 M
399 0 V
991 4171 M
56 -896 V
55 -527 V
55 -414 V
56 -265 V
55 -312 V
55 -100 V
56 -252 V
55 -25 V
55 -167 V
56 -39 V
55 18 V
55 -35 V
56 137 V
55 -345 V
55 169 V
56 -227 V
55 42 V
55 149 V
56 -48 V
55 -107 V
55 -81 V
56 152 V
55 -34 V
55 -10 V
56 -282 V
55 308 V
55 -41 V
56 128 V
55 37 V
55 -56 V
56 -86 V
55 -18 V
55 124 V
56 -243 V
55 233 V
55 12 V
56 -73 V
55 -125 V
55 -107 V
56 309 V
55 -195 V
55 4 V
56 288 V
55 -402 V
55 50 V
56 353 V
55 -350 V
55 80 V
55 57 V
56 330 V
55 -570 V
55 378 V
56 -260 V
55 284 V
55 32 V
56 -74 V
55 -149 V
55 298 V
56 73 V
55 -145 V
55 -23 V
56 -91 V
55 -95 V
55 342 V
56 -63 V
55 -18 V
55 -146 V
56 13 V
55 263 V
55 -287 V
56 206 V
55 -49 V
55 -214 V
56 117 V
55 -41 V
55 192 V
56 101 V
55 -156 V
55 -263 V
56 161 V
55 -30 V
55 -117 V
56 58 V
55 274 V
55 -222 V
56 142 V
55 -142 V
55 89 V
56 -40 V
55 -155 V
55 413 V
56 -60 V
55 -44 V
55 -134 V
56 -36 V
55 134 V
991 4171 Pls
1047 3275 Pls
1102 2748 Pls
1157 2334 Pls
1213 2069 Pls
1268 1757 Pls
1323 1657 Pls
1379 1405 Pls
1434 1380 Pls
1489 1213 Pls
1545 1174 Pls
1600 1192 Pls
1655 1157 Pls
1711 1294 Pls
1766 949 Pls
1821 1118 Pls
1877 891 Pls
1932 933 Pls
1987 1082 Pls
2043 1034 Pls
2098 927 Pls
2153 846 Pls
2209 998 Pls
2264 964 Pls
2319 954 Pls
2375 672 Pls
2430 980 Pls
2485 939 Pls
2541 1067 Pls
2596 1104 Pls
2651 1048 Pls
2707 962 Pls
2762 944 Pls
2817 1068 Pls
2873 825 Pls
2928 1058 Pls
2983 1070 Pls
3039 997 Pls
3094 872 Pls
3149 765 Pls
3205 1074 Pls
3260 879 Pls
3315 883 Pls
3371 1171 Pls
3426 769 Pls
3481 819 Pls
3537 1172 Pls
3592 822 Pls
3647 902 Pls
3702 959 Pls
3758 1289 Pls
3813 719 Pls
3868 1097 Pls
3924 837 Pls
3979 1121 Pls
4034 1153 Pls
4090 1079 Pls
4145 930 Pls
4200 1228 Pls
4256 1301 Pls
4311 1156 Pls
4366 1133 Pls
4422 1042 Pls
4477 947 Pls
4532 1289 Pls
4588 1226 Pls
4643 1208 Pls
4698 1062 Pls
4754 1075 Pls
4809 1338 Pls
4864 1051 Pls
4920 1257 Pls
4975 1208 Pls
5030 994 Pls
5086 1111 Pls
5141 1070 Pls
5196 1262 Pls
5252 1363 Pls
5307 1207 Pls
5362 944 Pls
5418 1105 Pls
5473 1075 Pls
5528 958 Pls
5584 1016 Pls
5639 1290 Pls
5694 1068 Pls
5750 1210 Pls
5805 1068 Pls
5860 1157 Pls
5916 1117 Pls
5971 962 Pls
6026 1375 Pls
6082 1315 Pls
6137 1271 Pls
6192 1137 Pls
6248 1101 Pls
6303 1235 Pls
5935 4486 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
5652 4346 M
[ [(Helvetica) 140.0 0.0 true true 0 (Max consumed energy)]
] -46.7 MRshow
LT1
5736 4346 M
399 0 V
991 4406 M
56 -1083 V
55 -454 V
55 -528 V
56 -271 V
55 -330 V
55 -82 V
56 -395 V
55 -26 V
55 -74 V
56 -100 V
55 -7 V
55 141 V
56 100 V
55 -462 V
55 205 V
56 -419 V
55 363 V
55 -12 V
56 68 V
55 -190 V
55 -194 V
56 303 V
55 -196 V
55 236 V
56 -539 V
55 442 V
55 -110 V
56 146 V
55 40 V
55 12 V
56 -63 V
55 -78 V
55 115 V
56 -387 V
55 385 V
55 -70 V
56 -38 V
55 -49 V
55 -267 V
56 463 V
55 -184 V
55 -99 V
56 537 V
55 -589 V
55 -21 V
56 485 V
55 -341 V
55 -14 V
55 132 V
56 515 V
55 -947 V
55 700 V
56 -404 V
55 226 V
55 70 V
56 -49 V
55 -163 V
55 441 V
56 16 V
55 -88 V
55 -226 V
56 53 V
55 -164 V
55 311 V
56 -20 V
55 62 V
55 -32 V
56 -182 V
55 217 V
55 -232 V
56 212 V
55 101 V
55 -497 V
56 275 V
55 -79 V
55 219 V
56 -25 V
55 -11 V
55 -319 V
56 116 V
55 45 V
55 -136 V
56 74 V
55 449 V
55 -473 V
56 268 V
55 -81 V
55 -97 V
56 131 V
55 -166 V
55 360 V
56 -27 V
55 -264 V
55 65 V
56 -141 V
55 170 V
991 4406 Crs
1047 3323 Crs
1102 2869 Crs
1157 2341 Crs
1213 2070 Crs
1268 1740 Crs
1323 1658 Crs
1379 1263 Crs
1434 1237 Crs
1489 1163 Crs
1545 1063 Crs
1600 1056 Crs
1655 1197 Crs
1711 1297 Crs
1766 835 Crs
1821 1040 Crs
1877 621 Crs
1932 984 Crs
1987 972 Crs
2043 1040 Crs
2098 850 Crs
2153 656 Crs
2209 959 Crs
2264 763 Crs
2319 999 Crs
2375 460 Crs
2430 902 Crs
2485 792 Crs
2541 938 Crs
2596 978 Crs
2651 990 Crs
2707 927 Crs
2762 849 Crs
2817 964 Crs
2873 577 Crs
2928 962 Crs
2983 892 Crs
3039 854 Crs
3094 805 Crs
3149 538 Crs
3205 1001 Crs
3260 817 Crs
3315 718 Crs
3371 1255 Crs
3426 666 Crs
3481 645 Crs
3537 1130 Crs
3592 789 Crs
3647 775 Crs
3702 907 Crs
3758 1422 Crs
3813 475 Crs
3868 1175 Crs
3924 771 Crs
3979 997 Crs
4034 1067 Crs
4090 1018 Crs
4145 855 Crs
4200 1296 Crs
4256 1312 Crs
4311 1224 Crs
4366 998 Crs
4422 1051 Crs
4477 887 Crs
4532 1198 Crs
4588 1178 Crs
4643 1240 Crs
4698 1208 Crs
4754 1026 Crs
4809 1243 Crs
4864 1011 Crs
4920 1223 Crs
4975 1324 Crs
5030 827 Crs
5086 1102 Crs
5141 1023 Crs
5196 1242 Crs
5252 1217 Crs
5307 1206 Crs
5362 887 Crs
5418 1003 Crs
5473 1048 Crs
5528 912 Crs
5584 986 Crs
5639 1435 Crs
5694 962 Crs
5750 1230 Crs
5805 1149 Crs
5860 1052 Crs
5916 1183 Crs
5971 1017 Crs
6026 1377 Crs
6082 1350 Crs
6137 1086 Crs
6192 1151 Crs
6248 1010 Crs
6303 1180 Crs
5935 4346 Crs
% End plot #2
1.000 UL
LTb
770 4619 N
770 448 L
5533 0 V
0 4171 V
-5533 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
