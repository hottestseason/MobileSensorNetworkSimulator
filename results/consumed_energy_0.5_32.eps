%!PS-Adobe-2.0 EPSF-2.0
%%Title: consumed_energy_0.5_32.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Wed Feb  6 18:15:10 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (consumed_energy_0.5_32.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (summer)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  6 18:15:10 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1.000 UL
LTa
854 448 M
6093 0 V
stroke
LTb
854 448 M
63 0 V
6030 0 R
-63 0 V
stroke
770 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 11000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 865 M
6093 0 V
stroke
LTb
854 865 M
63 0 V
6030 0 R
-63 0 V
stroke
770 865 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 1282 M
6093 0 V
stroke
LTb
854 1282 M
63 0 V
6030 0 R
-63 0 V
stroke
770 1282 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 13000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 1699 M
6093 0 V
stroke
LTb
854 1699 M
63 0 V
6030 0 R
-63 0 V
stroke
770 1699 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 14000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 2116 M
6093 0 V
stroke
LTb
854 2116 M
63 0 V
6030 0 R
-63 0 V
stroke
770 2116 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 2534 M
6093 0 V
stroke
LTb
854 2534 M
63 0 V
6030 0 R
-63 0 V
stroke
770 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 2951 M
6093 0 V
stroke
LTb
854 2951 M
63 0 V
6030 0 R
-63 0 V
stroke
770 2951 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 17000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 3368 M
6093 0 V
stroke
LTb
854 3368 M
63 0 V
6030 0 R
-63 0 V
stroke
770 3368 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 18000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 3785 M
6093 0 V
stroke
LTb
854 3785 M
63 0 V
6030 0 R
-63 0 V
stroke
770 3785 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 19000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 4202 M
6093 0 V
stroke
LTb
854 4202 M
63 0 V
6030 0 R
-63 0 V
stroke
770 4202 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 4619 M
6093 0 V
stroke
LTb
854 4619 M
63 0 V
6030 0 R
-63 0 V
stroke
770 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 21000)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4171 V
stroke
LTb
854 448 M
0 63 V
0 4108 R
0 -63 V
stroke
854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1463 448 M
0 4171 V
stroke
LTb
1463 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1463 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2073 448 M
0 4171 V
stroke
LTb
2073 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2073 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2682 448 M
0 4171 V
stroke
LTb
2682 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2682 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3291 448 M
0 4171 V
stroke
LTb
3291 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3291 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3901 448 M
0 4171 V
stroke
LTb
3901 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3901 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4510 448 M
0 4171 V
stroke
LTb
4510 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4510 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5119 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
5119 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5119 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5728 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
5728 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5728 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6338 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
6338 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6338 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6947 448 M
0 4171 V
stroke
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
854 4619 N
854 448 L
6093 0 V
0 4171 V
-6093 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Consumed Energy)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3900 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Damping coefficient)]
] -46.7 MCshow
LTb
3900 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Simulation \(Robots : 32\))]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6296 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (Sum consumed energy)]
] -46.7 MRshow
LT0
6380 4486 M
399 0 V
1159 1008 M
30 -64 V
31 -155 V
30 1 V
31 -24 V
30 -13 V
30 18 V
31 -21 V
30 -11 V
31 -24 V
30 -105 V
31 -35 V
30 118 V
31 -39 V
30 163 V
31 48 V
30 19 V
31 19 V
30 -139 V
30 88 V
31 86 V
30 -27 V
31 -128 V
30 298 V
31 -126 V
30 109 V
31 -157 V
30 105 V
31 -90 V
30 62 V
31 4 V
30 132 V
31 46 V
30 -57 V
30 -58 V
31 14 V
30 71 V
31 16 V
30 -25 V
31 244 V
30 -22 V
31 -91 V
30 -28 V
31 166 V
30 -158 V
31 229 V
30 -193 V
31 76 V
30 -40 V
30 72 V
31 -128 V
30 430 V
31 -219 V
30 71 V
31 -54 V
30 150 V
31 -51 V
30 -78 V
31 287 V
30 -313 V
31 165 V
30 23 V
30 -55 V
31 133 V
30 68 V
31 -156 V
30 21 V
31 82 V
30 98 V
31 -221 V
30 412 V
31 -133 V
30 23 V
31 -18 V
30 99 V
31 -302 V
30 251 V
30 -95 V
31 28 V
30 193 V
31 -132 V
30 101 V
31 -30 V
30 113 V
31 -380 V
30 433 V
31 33 V
30 28 V
31 -168 V
30 155 V
31 -256 V
30 402 V
30 67 V
31 -253 V
30 67 V
31 194 V
30 -168 V
31 -70 V
30 134 V
31 53 V
30 -164 V
31 168 V
30 177 V
stroke 4266 2597 M
31 -153 V
30 219 V
30 -95 V
31 -297 V
30 548 V
31 -266 V
30 39 V
31 -186 V
30 333 V
31 -71 V
30 -90 V
31 -162 V
30 518 V
31 -371 V
30 321 V
31 -224 V
30 849 V
30 -700 V
31 -53 V
30 -168 V
31 383 V
30 -213 V
31 564 V
30 -515 V
31 -158 V
30 350 V
31 -425 V
30 697 V
31 -2 V
30 27 V
30 -599 V
31 954 V
30 -44 V
31 -387 V
30 -144 V
31 402 V
30 237 V
31 -485 V
30 -77 V
31 329 V
30 -86 V
31 -95 V
30 212 V
31 -253 V
30 -252 V
30 360 V
31 -29 V
30 20 V
31 267 V
30 -545 V
31 284 V
30 454 V
31 -127 V
30 401 V
31 -556 V
30 -269 V
31 -41 V
30 510 V
31 193 V
30 -127 V
30 -113 V
31 12 V
30 237 V
31 518 V
30 -449 V
31 -307 V
30 43 V
31 -127 V
30 615 V
31 -436 V
30 360 V
31 -370 V
30 -45 V
30 -2 V
31 353 V
30 28 V
31 16 V
30 -185 V
31 528 V
30 67 V
31 -755 V
30 752 V
31 -527 V
30 404 V
31 -213 V
30 295 V
31 -492 V
1159 1008 Pls
1189 944 Pls
1220 789 Pls
1250 790 Pls
1281 766 Pls
1311 753 Pls
1341 771 Pls
1372 750 Pls
1402 739 Pls
1433 715 Pls
1463 610 Pls
1494 575 Pls
1524 693 Pls
1555 654 Pls
1585 817 Pls
1616 865 Pls
1646 884 Pls
1677 903 Pls
1707 764 Pls
1737 852 Pls
1768 938 Pls
1798 911 Pls
1829 783 Pls
1859 1081 Pls
1890 955 Pls
1920 1064 Pls
1951 907 Pls
1981 1012 Pls
2012 922 Pls
2042 984 Pls
2073 988 Pls
2103 1120 Pls
2134 1166 Pls
2164 1109 Pls
2194 1051 Pls
2225 1065 Pls
2255 1136 Pls
2286 1152 Pls
2316 1127 Pls
2347 1371 Pls
2377 1349 Pls
2408 1258 Pls
2438 1230 Pls
2469 1396 Pls
2499 1238 Pls
2530 1467 Pls
2560 1274 Pls
2591 1350 Pls
2621 1310 Pls
2651 1382 Pls
2682 1254 Pls
2712 1684 Pls
2743 1465 Pls
2773 1536 Pls
2804 1482 Pls
2834 1632 Pls
2865 1581 Pls
2895 1503 Pls
2926 1790 Pls
2956 1477 Pls
2987 1642 Pls
3017 1665 Pls
3047 1610 Pls
3078 1743 Pls
3108 1811 Pls
3139 1655 Pls
3169 1676 Pls
3200 1758 Pls
3230 1856 Pls
3261 1635 Pls
3291 2047 Pls
3322 1914 Pls
3352 1937 Pls
3383 1919 Pls
3413 2018 Pls
3444 1716 Pls
3474 1967 Pls
3504 1872 Pls
3535 1900 Pls
3565 2093 Pls
3596 1961 Pls
3626 2062 Pls
3657 2032 Pls
3687 2145 Pls
3718 1765 Pls
3748 2198 Pls
3779 2231 Pls
3809 2259 Pls
3840 2091 Pls
3870 2246 Pls
3901 1990 Pls
3931 2392 Pls
3961 2459 Pls
3992 2206 Pls
4022 2273 Pls
4053 2467 Pls
4083 2299 Pls
4114 2229 Pls
4144 2363 Pls
4175 2416 Pls
4205 2252 Pls
4236 2420 Pls
4266 2597 Pls
4297 2444 Pls
4327 2663 Pls
4357 2568 Pls
4388 2271 Pls
4418 2819 Pls
4449 2553 Pls
4479 2592 Pls
4510 2406 Pls
4540 2739 Pls
4571 2668 Pls
4601 2578 Pls
4632 2416 Pls
4662 2934 Pls
4693 2563 Pls
4723 2884 Pls
4754 2660 Pls
4784 3509 Pls
4814 2809 Pls
4845 2756 Pls
4875 2588 Pls
4906 2971 Pls
4936 2758 Pls
4967 3322 Pls
4997 2807 Pls
5028 2649 Pls
5058 2999 Pls
5089 2574 Pls
5119 3271 Pls
5150 3269 Pls
5180 3296 Pls
5210 2697 Pls
5241 3651 Pls
5271 3607 Pls
5302 3220 Pls
5332 3076 Pls
5363 3478 Pls
5393 3715 Pls
5424 3230 Pls
5454 3153 Pls
5485 3482 Pls
5515 3396 Pls
5546 3301 Pls
5576 3513 Pls
5607 3260 Pls
5637 3008 Pls
5667 3368 Pls
5698 3339 Pls
5728 3359 Pls
5759 3626 Pls
5789 3081 Pls
5820 3365 Pls
5850 3819 Pls
5881 3692 Pls
5911 4093 Pls
5942 3537 Pls
5972 3268 Pls
6003 3227 Pls
6033 3737 Pls
6064 3930 Pls
6094 3803 Pls
6124 3690 Pls
6155 3702 Pls
6185 3939 Pls
6216 4457 Pls
6246 4008 Pls
6277 3701 Pls
6307 3744 Pls
6338 3617 Pls
6368 4232 Pls
6399 3796 Pls
6429 4156 Pls
6460 3786 Pls
6490 3741 Pls
6520 3739 Pls
6551 4092 Pls
6581 4120 Pls
6612 4136 Pls
6642 3951 Pls
6673 4479 Pls
6703 4546 Pls
6734 3791 Pls
6764 4543 Pls
6795 4016 Pls
6825 4420 Pls
6856 4207 Pls
6886 4502 Pls
6917 4010 Pls
6579 4486 Pls
% End plot #1
1.000 UL
LTb
854 4619 N
854 448 L
6093 0 V
0 4171 V
-6093 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
